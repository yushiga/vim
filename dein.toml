# 補完
# Golangの自動補完やりたくてdeoplete.nvimとneosnippet.vimを導入
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = 'let g:deoplete#enable_at_startup = 1'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1
hook_source = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
"imap <expr><TAB>
" \ pumvisible() ? "\<C-n>" :
" \ neosnippet#expandable_or_jumpable() ?
" \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
" \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''

#プラグインマネージャ
[[plugins]]
repo = 'Shougo/dein.vim'

#エクスプローラみたいなのを表示
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
    let g:NERDTreeShowHidden = 1
    "NERTTreeをctrl + eで開く
    nnoremap <silent><C-e> :NERDTreeToggle<CR>
'''

#カラースキーム
[[plugins]]
repo = 'sjl/badwolf'

#Gtags(関数や変数のジャンプ昨日。参照先を出したくて導入)
[[plugins]]
repo = 'lighttiger2505/gtags.vim'
hook_add = '''
    " Options
    let g:Gtags_Auto_Map = 0
    let g:Gtags_OpenQuickfixWindow = 1
    " Keymap
    " スペース + f = 関数一覧表示
    " スペース + j = カーソル位置の関数を検索する
    " スペース + d = 参照元へジャンプ
    " スペース + r = 参照先へジャンプ
    nnoremap <silent> <Space>f :Gtags -f %<CR>
    nnoremap <silent> <Space>j :GtagsCursor<CR>
    nnoremap <silent> <Space>d :<C-u>exe('Gtags '.expand('<cword>'))<CR>
    nnoremap <silent> <Space>r :<C-u>exe('Gtags -r '.expand('<cword>'))<CR>
'''

#IDEぽく関数一覧なんかを表示する
[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
    let g:tagbar_width = 20
    " 「Space + t」でtagbar展開
    nnoremap <silent> <Space>t :TagbarToggle<CR>
'''

#ステータスバーの見た目をかっこよく、かつ実用的に。
[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']
hook_add = '''
    "テーマ
    let g:airline_theme = 'kalisi'
    "バッファをタブ表示
    let g:airline#extensions#tabline#enabled = 1
    "左右のカーソルキーでバッファ移動
    nnoremap <Left> :bp<CR>
    nnoremap <Right> :bn<CR>
'''

#vim-airlineのテーマ
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

#ステータスバーにブランチ名表示
[[plugins]]
repo = 'tpope/vim-fugitive'

#gtagsを非同期で生成してくれる・・・はずだけどこれがあるとgtagsうまく動作しないのでコメントアウト
#[[plugins]]
#repo = 'jsfaint/gen_tags.vim'
#hook_add = '''
#    let g:gen_tags#gtags_auto_gen = 1
#'''

#JSONを見やすく
[[plugins]]
repo = 'elzr/vim-json'

#構文チェッカー
[[plugins]]
repo = 'vim-syntastic/syntastic'
hook_add = '''
    set statusline+=%#warningmsg#
    set statusline+=%{SyntasticStatuslineFlag()}
    set statusline+=%*
    "他のVimプラグインと競合するのを防ぐ
    let g:syntastic_always_populate_loc_list = 1
    "構文エラーリストを表示
    let g:syntastic_auto_loc_list = 1
    "ファイルを開いた時に構文エラーチェックを実行しない
    let g:syntastic_check_on_open = 0
    "wqで閉じるときに構文エラーチェックを実行しなし
    let g:syntastic_check_on_wq = 0
    "Pythone用。構文エラーチェックにflake8を使用
    let g:syntastic_python_checkers = ["flake8"]
    
    highlight link SyntasticErrorSign SignColumn
    highlight link SyntasticWarningSign SignColumn
    highlight link SyntasticStyleErrorSign SignColumn
    highlight link SyntasticStyleWarningSign SignColumn
'''
